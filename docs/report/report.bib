@book{TanenbaumSteen06,
 author = {Tanenbaum, Andrew S. and Steen, Maarten van},
 title = {Distributed Systems: Principles and Paradigms (2nd Edition)},
 year = {2006},
 isbn = {0132392275},
 publisher = {Prentice-Hall, Inc.},
 address = {Upper Saddle River, NJ, USA},
}

@article{Lamport78,
 author = {Lamport, Leslie},
 title = {Time, Clocks, and the Ordering of Events in a Distributed System},
 journal = {Commun. ACM},
 issue_date = {July 1978},
 volume = {21},
 number = {7},
 month = jul,
 year = {1978},
 issn = {0001-0782},
 pages = {558--565},
 numpages = {8},
 url = {http://doi.acm.org/10.1145/359545.359563},
 doi = {10.1145/359545.359563},
 acmid = {359563},
 publisher = {ACM},
 address = {New York, NY, USA},
 keywords = {clock synchronization, computer networks, distributed systems, multiprocess systems},
}

@article{Lamport82,
author = {Lamport, Leslie and Shostak, Robert and Pease, Marshall},
title = {The Byzantine Generals Problem},
booktitle = {},
year = {1982},
month = {July},
abstract = {I have long felt that, because it was posed as a cute problem about philosophers seated around a table, Dijkstra's dining philosopher's problem received much more attention than it deserves. (For example, it has probably received more attention in the theory community than the readers/writers problem, which illustrates the same principles and has much more practical importance.) I believed that the problem introduced in [41] was very important and deserved the attention of computer scientists. The popularity of the dining philosophers problem taught me that the best way to attract attention to a problem is to present it in terms of a story.

There is a problem in distributed computing that is sometimes called the Chinese Generals Problem, in which two generals have to come to a common agreement on whether to attack or retreat, but can communicate only by sending messengers who might never arrive. I stole the idea of the generals and posed the problem in terms of a group of generals, some of whom may be traitors, who have to reach a common decision. I wanted to assign the generals a nationality that would not offend any readers. At the time, Albania was a completely closed society, and I felt it unlikely that there would be any Albanians around to object, so the original title of this paper was The Albanian Generals Problem. Jack Goldberg was smart enough to realize that there were Albanians in the world outside Albania, and Albania might not always be a black hole, so he suggested that I find another name. The obviously more appropriate Byzantine generals then occurred to me.

The main reason for writing this paper was to assign the new name to the problem. But a new paper needed new results as well. I came up with a simpler way to describe the general 3n+1-processor algorithm. (Shostak's 4-processor algorithm was subtle but easy to understand; Pease's generalization was a remarkable tour de force.) We also added a generalization to networks that were not completely connected. (I don't remember whose work that was.) I also added some discussion of practical implementation details.},
publisher = {},
url = {https://www.microsoft.com/en-us/research/publication/byzantine-generals-problem/},
address = {},
pages = {382-401},
journal = {ACM Transactions on Programming Languages and Systems},
volume = {4/3},
chapter = {},
isbn = {},
}

@inproceedings{SchenatoGamba07, 
  author={L. Schenato and G. Gamba}, 
  booktitle={2007 46th IEEE Conference on Decision and Control}, 
  title={A distributed consensus protocol for clock synchronization in wireless sensor network}, 
  year={2007}, 
  volume={}, 
  number={}, 
  pages={2289-2294}, 
  keywords={clocks;protocols;synchronisation;wireless sensor networks;Average TimeSync;clock skew;clock synchronization;distributed consensus protocol;wireless sensor network;Clocks;Delay effects;Scheduling;Spread spectrum communication;Synchronization;Time division multiple access;Tree graphs;USA Councils;Wireless application protocol;Wireless sensor networks}, 
  doi={10.1109/CDC.2007.4434671}, 
  ISSN={0191-2216}, 
  month={Dec},
}

@article{LucaFiorentin11,
  author={Schenato,Luca and Fiorentin,Federico},
  year={2011},
  title={Average TimeSynch: A consensus-based protocol for clock synchronization in wireless sensor networks},
  journal={Automatica},
  volume={47},
  number={9},
  pages={1878-1886},
  keywords={Networked systems; Consensus; Time synchronization; Drift compensation; Node failure; Computer network protocols; Algorithms; Sensors},
  isbn={0005-1098},
  language={English},
}

@article{Gusella89,
  author={R. Gusella and S. Zatti}, 
  journal={IEEE Transactions on Software Engineering}, 
  title={The accuracy of the clock synchronization achieved by TEMPO in Berkeley UNIX 4.3BSD}, 
  year={1989}, 
  volume={15}, 
  number={7}, 
  pages={847-853}, 
  keywords={Unix;fault tolerant computing;local area networks;synchronisation;Berkeley UNIX 4.3BSD;TEMPO;VAX computers;clock synchronization;distributed service;local area network;lower bounds;network transmission latency;upper bounds;Clocks;Computer networks;Computer science;Costs;Delay;Local area networks;Master-slave;Nominations and elections;Synchronization;Time measurement}, 
  doi={10.1109/32.29484}, 
  ISSN={0098-5589}, 
  month={Jul},
}

@article{HeChengShiChen13, 
author={J. He and P. Cheng and L. Shi and J. Chen}, 
journal={IEEE Transactions on Signal Processing}, 
title={SATS: Secure Average-Consensus-Based Time Synchronization in Wireless Sensor Networks}, 
year={2013}, 
volume={61}, 
number={24}, 
pages={6387-6400}, 
keywords={protocols;synchronisation;telecommunication network topology;telecommunication security;wireless sensor networks;ATS protocol;SATS;average-consensus-based time synchronization protocol;denial-of-service;in-network information fusion;message manipulation attacks;network topology;node destruction;parameter checking mechanism;reference node;secure average-consensus-based time synchronization;two-hop neighboring information;wireless sensor networks;Clocks;Computer crime;Delays;Hardware;Protocols;Synchronization;Wireless sensor networks;Wireless sensor networks;average consensus; security;message manipulation attack;time synchronization}, 
doi={10.1109/TSP.2013.2286102}, 
ISSN={1053-587X}, 
month={Dec},}

@article{Schneider90,
 author = {Schneider, Fred B.},
 title = {Implementing Fault-tolerant Services Using the State Machine Approach: A Tutorial},
 journal = {ACM Comput. Surv.},
 issue_date = {Dec. 1990},
 volume = {22},
 number = {4},
 month = dec,
 year = {1990},
 issn = {0360-0300},
 pages = {299--319},
 numpages = {21},
 url = {http://doi.acm.org/10.1145/98163.98167},
 doi = {10.1145/98163.98167},
 acmid = {98167},
 publisher = {ACM},
 address = {New York, NY, USA},
} 
@article{Ramanathan90,
 author = {Ramanathan, Parameswaran and Shin, Kang G. and Butler, Ricky W.},
 title = {Fault-Tolerant Clock Synchronization in Distributed Systems},
 journal = {Computer},
 issue_date = {October 1990},
 volume = {23},
 number = {10},
 month = oct,
 year = {1990},
 issn = {0018-9162},
 pages = {33--42},
 numpages = {10},
 url = {http://dx.doi.org/10.1109/2.58235},
 doi = {10.1109/2.58235},
 acmid = {101842},
 publisher = {IEEE Computer Society Press},
 address = {Los Alamitos, CA, USA},
} 



@article{Maroti04,
	author = {Miklós Maróti and Branislav Kusy and Gyula Simon and Ákos Lédecz},
	title = {The flooding time synchronization protocol},
	journal = {SenSys '04 Proceedings of the 2nd international conference on Embedded networked sensor systems},
	issue_date = {2004},
	pages = {39--49},
	url = {https://dl.acm.org/citation.cfm?id=1031495.1031501},
	doi = {10.1145/1031495.1031501},
}


@article{HeLiChenCheng13,
  author={He,Jianping and Li,Hao and Chen,Jiming and Cheng,Peng},
  year={2014},
  title={Study of consensus-based time synchronization in wireless sensor networks},
  journal={ISA transactions},
  volume={53},
  number={2},
  pages={347-357},
  abstract={Recently, various consensus-based protocols have been developed for time synchronization in wireless sensor networks. However, due to the uncertainties lying in both the hardware fabrication and network communication processes, it is not clear how most of the protocols will perform in real implementations. In order to reduce such gap, this paper investigates whether and how the typical consensus-based time synchronization protocols can tolerate the uncertainties in practical sensor networks through extensive testbed experiments. For two typical protocols, i.e., Average Time Synchronization (ATS) and Maximum Time Synchronization (MTS), we first analyze how the time synchronization accuracy will be affected by various uncertainties in the system. Then, we implement both protocols on our sensor network testbed consisted of Micaz nodes, and investigate the time synchronization performance and robustness under various network settings. Noticing that the synchronized clocks under MTS may be slightly faster than the desirable clock, by adopting both maximum consensus and minimum consensus, we propose a modified protocol, MMTS, which is able to drive the synchronized clocks closer to the desirable clock while maintaining the convergence rate and synchronization accuracy of MTS.;Recently, various consensus-based protocols have been developed for time synchronization in wireless sensor networks. However, due to the uncertainties lying in both the hardware fabrication and network communication processes, it is not clear how most of the protocols will perform in real implementations. In order to reduce such gap, this paper investigates whether and how the typical consensus-based time synchronization protocols can tolerate the uncertainties in practical sensor networks through extensive testbed experiments. For two typical protocols, i.e., Average Time Synchronization (ATS) and Maximum Time Synchronization (MTS), we first analyze how the time synchronization accuracy will be affected by various uncertainties in the system. Then, we implement both protocols on our sensor network testbed consisted of Micaz nodes, and investigate the time synchronization performance and robustness under various network settings. Noticing that the synchronized clocks under MTS may be slightly faster than the desirable clock, by adopting both maximum consensus and minimum consensus, we propose a modified protocol, MMTS, which is able to drive the synchronized clocks closer to the desirable clock while maintaining the convergence rate and synchronization accuracy of MTS.;},
  keywords={Control systems; Sensors; Computer network protocols; Analysis},
  isbn={0019-0578},
  language={English},
}

@INPROCEEDINGS{Mattern88virtualtime,
    author = {Friedemann Mattern},
    title = {Virtual Time and Global States of Distributed Systems},
    booktitle = {PARALLEL AND DISTRIBUTED ALGORITHMS},
    year = {1988},
    pages = {215--226},
    publisher = {North-Holland}
}

@article{einstein,
    author =       " Gusella, Riccardo ; Zatti, Stefano",
    title =        "{An Election Algorithm for a Distributed Clock Synchronization Program}",
    journal =      "Berkeley Technical Report",
    number =       "UCB/CSD-86-275",
    year =         "1986",
}

@article{ElsonGirodEstrin02,
 author = {Elson, Jeremy and Girod, Lewis and Estrin, Deborah},
 title = {Fine-grained Network Time Synchronization Using Reference Broadcasts},
 journal = {SIGOPS Oper. Syst. Rev.},
 issue_date = {Winter 2002},
 volume = {36},
 number = {SI},
 month = dec,
 year = {2002},
 issn = {0163-5980},
 pages = {147--163},
 numpages = {17},
 url = {http://doi.acm.org/10.1145/844128.844143},
 doi = {10.1145/844128.844143},
 acmid = {844143},
 publisher = {ACM},
 address = {New York, NY, USA},
}
